{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./src/views/GitHubLogin.vue","webpack:///./src/views/GitHubLogin.vue?8757","webpack:///./node_modules/core-js/internals/regexp-flags.js"],"names":["redefine","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","R","this","p","String","rf","f","undefined","unsafe","clientId","stateParameter","generateStateParameter","href","linkUrl","data","clientSecret","mounted","sessionStorage","getItem","computed","params","URLSearchParams","client_id","state","allow_signup","toString","methods","text","possible","i","charAt","Math","floor","random","length","setItem","render","module","exports","that","result","global","ignoreCase","multiline","dotAll","unicode","sticky"],"mappings":"kHACA,IAAIA,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAQ,EAAQ,QAEhBC,EAAY,WACZC,EAAkBC,OAAOC,UACzBC,EAAiBH,EAAgBD,GAEjCK,EAAcP,GAAM,WAAc,MAA2D,QAApDM,EAAeE,KAAK,CAAEC,OAAQ,IAAKR,MAAO,SAEnFS,EAAiBJ,EAAeK,MAAQT,GAIxCK,GAAeG,IACjBZ,EAASM,OAAOC,UAAWH,GAAW,WACpC,IAAIU,EAAIb,EAASc,MACbC,EAAIC,OAAOH,EAAEH,QACbO,EAAKJ,EAAEX,MACPgB,EAAIF,YAAcG,IAAPF,GAAoBJ,aAAaR,UAAY,UAAWD,GAAmBF,EAAMO,KAAKI,GAAKI,GAC1G,MAAO,IAAMF,EAAI,IAAMG,IACtB,CAAEE,QAAQ,K,6DCtBV,eAAgB,SAAb,aAAS,G,EAEb,eAAuB,SAApB,oBAAgB,G,EAGG,eAAc,UAAV,SAAK,G,4EALjC,eAAsC,UAAnC,E,eAAgB,IAAC,eAAG,EAAAC,UAAQ,KAC/B,eAGI,UAFF,E,eAAuB,IAAC,eAAG,EAAAC,gBAAiB,IAC5C,kBAA2D,UAAlD,QAAK,+BAAE,EAAAC,4BAA0B,cAE5C,eAA0C,KAAtCC,KAAI,KAAOC,S,CAAS,G,uEAIX,GACbb,KAAM,cACNc,KAFa,WAGX,MAAO,CACLL,SAAU,uBACVM,aAAc,2CACdL,eAAgB,OAGpBM,QATa,WAUPC,eAAeC,QAAQ,kBACzBhB,KAAKQ,eAAiBO,eAAeC,QAAQ,kBAE7ChB,KAAKS,0BAGTQ,SAAU,CACRN,QADQ,WAEN,IAAMO,EAAS,IAAIC,gBAAgB,CACjCC,UAAWpB,KAAKO,SAChBc,MAAOrB,KAAKQ,eACZc,cAAc,IAEhB,MAAO,4CAA8CJ,EAAOK,aAGhEC,QAAS,CACPf,uBADO,WAOL,IAJA,IAAIgB,EAAO,GACPC,EACF,iEAEOC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASM,SAC9DjB,eAAekB,QAAQ,iBAAkBR,GACzCzB,KAAKQ,eAAiBiB,KC3C5B,EAAOS,OAASA,EAED,gB,kCCJf,IAAIhD,EAAW,EAAQ,QAIvBiD,EAAOC,QAAU,WACf,IAAIC,EAAOnD,EAASc,MAChBsC,EAAS,GAOb,OANID,EAAKE,SAAQD,GAAU,KACvBD,EAAKG,aAAYF,GAAU,KAC3BD,EAAKI,YAAWH,GAAU,KAC1BD,EAAKK,SAAQJ,GAAU,KACvBD,EAAKM,UAASL,GAAU,KACxBD,EAAKO,SAAQN,GAAU,KACpBA","file":"js/chunk-e1a970ac.js","sourcesContent":["'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","<template>\n  <p><b>ClientId:</b> {{ clientId }}</p>\n  <p>\n    <b>State parameter:</b> {{ stateParameter }}\n    <button @click=\"generateStateParameter()\">Generate</button>\n  </p>\n  <a :href=\"this.linkUrl\"><h3>Login</h3></a>\n</template>\n\n<script>\nexport default {\n  name: \"GitHubLogin\",\n  data() {\n    return {\n      clientId: \"5a76ef3307c83a98e0b4\",\n      clientSecret: \"59aac7f9a7157f1d626db653f20547b3c99a6cfe\",\n      stateParameter: null,\n    };\n  },\n  mounted() {\n    if (sessionStorage.getItem(\"stateParameter\")) {\n      this.stateParameter = sessionStorage.getItem(\"stateParameter\");\n    } else {\n      this.generateStateParameter();\n    }\n  },\n  computed: {\n    linkUrl() {\n      const params = new URLSearchParams({\n        client_id: this.clientId,\n        state: this.stateParameter,\n        allow_signup: false\n      });\n      return \"https://github.com/login/oauth/authorize?\" + params.toString();\n    },\n  },\n  methods: {\n    generateStateParameter() {\n      // https://medium.com/@dazcyril/generating-cryptographic-random-state-in-javascript-in-the-browser-c538b3daae50\n      let text = \"\";\n      let possible =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (let i = 0; i < 40; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      sessionStorage.setItem(\"stateParameter\", text);\n      this.stateParameter = text;\n    },\n  },\n};\n</script>","import { render } from \"./GitHubLogin.vue?vue&type=template&id=34520c4f\"\nimport script from \"./GitHubLogin.vue?vue&type=script&lang=js\"\nexport * from \"./GitHubLogin.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n"],"sourceRoot":""}